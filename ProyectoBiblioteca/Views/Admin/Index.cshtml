
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Page Heading -->
<div class="d-sm-flex align-items-center justify-content-between mb-4">
    <h1 class="h3 mb-0 text-gray-800">Dashboard</h1>
</div>
<!-- Content Row -->
<div class="row">
    <!-- Earnings (Monthly) Card Example -->
    <div class="col-xl-3 col-md-6 mb-4">
        <div class="card border-left-primary shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                            Total Libros
                        </div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800" id="div_libros">0</div>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-book fa-2x text-black-50"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Earnings (Monthly) Card Example -->
    <div class="col-xl-3 col-md-6 mb-4">
        <div class="card border-left-success shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-success text-uppercase mb-1">
                            Cantidad Lectores
                        </div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800" id="div_lectores">0</div>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-users fa-2x text-black-50"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Earnings (Monthly) Card Example -->
    <div class="col-xl-3 col-md-6 mb-4">
        <div class="card border-left-info shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-info text-uppercase mb-1">
                            Prestamos Registrados
                        </div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800" id="div_prestamos">0</div>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-clipboard-list fa-2x text-black-50"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Pending Requests Card Example -->
    <div class="col-xl-3 col-md-6 mb-4">
        <div class="card border-left-danger shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-danger text-uppercase mb-1">
                            Prestamos Pendientes
                        </div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800" id="div_pendientes">0</div>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-list-ol fa-2x text-black-50"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Start and Stop Buttons -->
<div class="row">
    <div class="col-md-6">
        <button id="startCapture" class="btn btn-primary">Iniciar Captura</button>
    </div>
    <div class="col-md-6">
        <button id="stopCapture" class="btn btn-danger" disabled>Detener Captura y Descargar</button>
    </div>
</div>

@section scripts{
    <script>
    let isCapturing = false;
    let captureData = [];

    async function fetchDataAndUpdateState() {
        try {
            const librosResponse = await jQuery.ajax({
                url: '@Url.Action("ListarLibro", "Biblioteca")',
                type: "GET",
                dataType: "json"
            });

            const lectoresResponse = await jQuery.ajax({
                url: '@Url.Action("ListarPersona", "Biblioteca")',
                type: "GET",
                dataType: "json"
            });

            const prestamosResponse = await jQuery.ajax({
                url: '@Url.Action("Listar", "Prestamo")' + "?idestadoprestamo=0&idpersona=0",
                type: "GET",
                dataType: "json"
            });

            const pendientesResponse = await jQuery.ajax({
                url: '@Url.Action("Listar", "Prestamo")' + "?idestadoprestamo=1&idpersona=0",
                type: "GET",
                dataType: "json"
            });

            return {
                libros: librosResponse.data.length,
                lectores: lectoresResponse.data.filter(item => item.oTipoPersona.IdTipoPersona == 3).length,
                prestamos: prestamosResponse.data.length,
                pendientes: pendientesResponse.data.filter(item => item.oEstadoPrestamo.IdEstadoPrestamo == 1).length
            };
        } catch (error) {
            console.error('Error fetching data:', error);
            return null;
        }
    }

    function fetchAndStoreData() {
        if (!isCapturing) return;

        fetchDataAndUpdateState().then(data => {
            if (data) {
                const timestamp = new Date().toISOString();
                const newData = { timestamp, ...data };
                captureData.push(newData);
                localStorage.setItem('captureData', JSON.stringify(captureData));
            }
            setTimeout(fetchAndStoreData, 5000); // Fetch every 5 seconds
        });
    }

    function startCapture() {
        isCapturing = true;
        localStorage.setItem('isCapturing', isCapturing);
        alert("La captura ha comenzado.");
        document.getElementById("startCapture").disabled = true;
        document.getElementById("stopCapture").disabled = false;
        fetchAndStoreData();
    }

    function stopCaptureAndDownload() {
        isCapturing = false;
        localStorage.setItem('isCapturing', isCapturing);
        alert("La captura ha terminado. Descargando datos.");
        document.getElementById("startCapture").disabled = false;
        document.getElementById("stopCapture").disabled = true;
        const dataStr = JSON.stringify(captureData, null, 2);
        const blob = new Blob([dataStr], { type: "text/plain" });
        const url = URL.createObjectURL(blob);
        const a = document.createElement("a");
        a.href = url;
        a.download = "captura_datos.txt";
        a.click();
        URL.revokeObjectURL(url);
        captureData = [];
        localStorage.removeItem('captureData');
    }

    document.getElementById("startCapture").addEventListener("click", startCapture);
    document.getElementById("stopCapture").addEventListener("click", stopCaptureAndDownload);

    // Restore state on page load
    window.onload = () => {
        isCapturing = localStorage.getItem('isCapturing') === 'true';
        if (isCapturing) {
            document.getElementById("startCapture").disabled = true;
            document.getElementById("stopCapture").disabled = false;
            captureData = JSON.parse(localStorage.getItem('captureData')) || [];
            fetchAndStoreData();
        }
    };
    </script>
}